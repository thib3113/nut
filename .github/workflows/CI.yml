name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/build-push-action@v6
        with:
          file: .github/tests/Dockerfile
          tags: nut-test:latest
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build:
    permissions:
      checks: write
      actions: read
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version: [ lts/*, 18]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: true
          version: latest

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: npm build, and test
        run: |
          pnpm run build
          echo start tests
        env:
          CI: true

      - uses: yogeshlonkar/wait-for-jobs@v0
        with:
          gh-token: ${{ secrets.GITHUB_TOKEN }}
          jobs: 'build-docker'

      - name: start nut
        run: docker run -d -p 3493:3493 nut-test:latest

      - uses: mattallty/jest-github-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI: true
        with:
          test-command: pnpm run test:ci:coverage
          coverage-comment: false

      - name: run eslint
        run: |
          npm run ci:eslint
        continue-on-error: true
        env:
          CI: true

      - uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            ./coverage/clover.xml
            ./coverage/coverage-final.json
            ./coverage/lcov.info
            ./coverage/junit.xml
            ./coverage/test-report.xml
            ./coverage/eslint-report.json
        if: ${{ matrix.node-version == 'lts/*' }}

      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          directory: ./coverage
        if: ${{ matrix.node-version == 'lts/*' }}

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: -Dsonar.projectName=nut
        if: ${{ matrix.node-version == 'lts/*' }}
