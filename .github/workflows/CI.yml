name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    permissions:
      checks: write
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version: [ lts/*, 18]
    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: true
          version: latest

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: npm build, and test
        run: |
          pnpm run build
          echo start tests
        env:
          CI: true

      - uses: docker/build-push-action@v6
        with:
          file: .github/tests/Dockerfile
          tags: nut-test:latest
          push: false

      - name: start nut
        run: docker run -d -p 3493:3493 nut-test:latest

      - uses: mattallty/jest-github-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI: true
        with:
          test-command: pnpm run test:ci:coverage
          coverage-comment: false

      - name: replace path in coverage files
        run: find ./coverage -type f -exec sed -i -e "s@$(pwd)@<root>@g" {} \;
        if: always()

      - uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.node-version }}
          path: |
            ./coverage/clover.xml
            ./coverage/coverage-final.json
            ./coverage/lcov.info
            ./coverage/junit.xml
            ./coverage/test-report.xml
        if: always()


  eslint:
    name: eslint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: install eslint
        run: npm install
      - name: run eslint
        run: |
          echo start eslint
          mkdir coverage
          npm run ci:eslint
        continue-on-error: true
        env:
          CI: true

      - name: replace path in coverage files
        run: find ./coverage -type f -exec sed -i -e "s@$(pwd)@<root>@g" {} \;

      - uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: ./coverage/eslint-report.json
